services:
# App
    ebike.web:
        container_name: ebike.web
        image: ${ROOT_REGISTRY}/ebike.web
        build:
          context: .
          dockerfile: src/Frontend/eBike.Web/Dockerfile

    ebike.aggregator.bff:
        container_name: ebike.aggregator.bff
        image: ${ROOT_REGISTRY}/ebike.aggregator.bff
        build:
            context: .
            dockerfile: src/Aggregators/eBike.BFF.Aggregator/Dockerfile

    ebike.service.bikes:
        container_name: ebike.service.bikes
        image: ${ROOT_REGISTRY}/ebike.service.bikes
        build:
          context: .
          dockerfile: src/Services/eBike.Services.Bikes/Dockerfile

    ebike.service.users:
        container_name: ebike.service.users
        image: ${ROOT_REGISTRY}/ebike.service.users
        build:
            context: .
            dockerfile: src/Services/eBike.Services.Users/Dockerfile

    ebike.worker.processing:
        container_name: ebike.worker.processing
        image: ${ROOT_REGISTRY}/ebike.worker.processing
        build:
            context: .
            dockerfile: src/Workers/eBike.Workers.Processing/Dockerfile
# App

# Container Dapperizzati
    ebike.web-dapr:
        container_name: ebike.web-dapr
        image: "daprio/daprd:${DAPRD_TAG}"
        network_mode: "service:ebike.web" # stessa rete del container da dapperizzare
        command: ["./daprd",
            "-app-id", "${APPID_WEB}",
            "-app-port", "80",
            "--enable-profiling", "",
            "--log-level", "debug",
            "-components-path", "/components",
            "-config", "/configurations/config.yaml"
          ]
        volumes:
            - "${DAPR_COMPONENTS_FOLDER}:/components"
            - "${DAPR_CONFIG_FOLDER}:/configurations"
        depends_on:
            - ebike.web
        deploy:
          resources:
            limits:
              cpus: '0.50'
              memory: 100M
            reservations:
              cpus: '0.25'
              memory: 50M

    ebike.service.bikes-dapr:
        container_name: ebike.service.bikes-dapr
        image: "daprio/daprd:${DAPRD_TAG}"
        network_mode: "service:ebike.service.bikes" # stessa rete del container da dapperizzare
        command: ["./daprd",
            "-app-id", "${APPID_BIKES}",
            "-app-port", "80",
            "--enable-profiling", "",
            "--log-level", "debug",
            "-components-path", "/components",
            "-config", "/configurations/config.yaml"
          ]
        volumes:
            - "${DAPR_COMPONENTS_FOLDER}:/components"
            - "${DAPR_CONFIG_FOLDER}:/configurations"
        depends_on:
            - ebike.service.bikes
        deploy:
          resources:
            limits:
              cpus: '0.50'
              memory: 100M
            reservations:
              cpus: '0.25'
              memory: 50M

    ebike.service.users-dapr:
        container_name: ebike.service.users-dapr
        image: "daprio/daprd:${DAPRD_TAG}"
        network_mode: "service:ebike.service.users" # stessa rete del container da dapperizzare
        command: ["./daprd",
            "-app-id", "${APPID_USERS}",
            "-app-port", "80",
            "--enable-profiling", "",
            "--log-level", "debug",
            "-components-path", "/components",
            "-config", "/configurations/config.yaml"
          ]
        volumes:
            - "${DAPR_COMPONENTS_FOLDER}:/components"
            - "${DAPR_CONFIG_FOLDER}:/configurations"
        depends_on:
            - ebike.service.users
        deploy:
          resources:
            limits:
              cpus: '0.50'
              memory: 100M
            reservations:
              cpus: '0.25'
              memory: 50M

    ebike.worker.processing-dapr:
        container_name: ebike.worker.processing-dapr
        image: "daprio/daprd:${DAPRD_TAG}"
        network_mode: "service:ebike.worker.processing" # stessa rete del container da dapperizzare
        command: ["./daprd",
            "-app-id", "${APPID_PROCESSING}",
            "-app-port", "80",
            "--enable-profiling", "",
            "--log-level", "debug",
            "-components-path", "/components",
            "-config", "/configurations/config.yaml"
          ]
        volumes:
            - "${DAPR_COMPONENTS_FOLDER}:/components"
            - "${DAPR_CONFIG_FOLDER}:/configurations"
        depends_on:
            - ebike.worker.processing
        deploy:
          resources:
            limits:
              cpus: '0.50'
              memory: 100M
            reservations:
              cpus: '0.25'
              memory: 50M

    ebike.aggregator.bff-dapr:
        container_name: ebike.aggregator.bff-dapr
        image: "daprio/daprd:${DAPRD_TAG}"
        network_mode: "service:ebike.aggregator.bff" # stessa rete del container da dapperizzare
        command: ["./daprd",
            "-app-id", "${APPID_AGGREGATOR}",
            "-app-port", "80",
            "--enable-profiling", "",
            "--log-level", "debug",
            "-components-path", "/components",
            "-config", "/configurations/config.yaml"
          ]
        volumes:
            - "${DAPR_COMPONENTS_FOLDER}:/components"
            - "${DAPR_CONFIG_FOLDER}:/configurations"
        depends_on:
            - ebike.aggregator.bff
        deploy:
          resources:
            limits:
              cpus: '0.50'
              memory: 100M
            reservations:
              cpus: '0.25'
              memory: 50M
# Container Dapperizzati

# Services
    redis:
        container_name: redis
        image: redis:alpine
        ports:
        - "6379:6379"
# Services

# Observability
    zipkin:
        container_name: zipkin
        image: openzipkin/zipkin-slim
        ports:
        - "9411:9411"

# Observability